# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job de build : compile l'application React
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Utilisez la version de Node.js que votre projet requiert

      - name: Install dependencies
        run: npm install # Ou yarn install si vous utilisez Yarn

      - name: Build React app
        run: npm run build # Crée votre application optimisée dans le dossier 'build' ou 'dist'

      - name: Upload artifact for deployment
        uses: actions/upload-pages-artifact@v3
        with:
          # Le dossier qui contient votre application React compilée
          path: './build' # Assurez-vous que c'est le bon dossier de sortie de votre build

  # Job de déploiement : déploie l'artefact sur GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # Ce job dépend du succès du job 'build'
    if: github.ref == 'refs/heads/main' # Déployer uniquement si le push est sur la branche main

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # C'est l'action de déploiement officielle
